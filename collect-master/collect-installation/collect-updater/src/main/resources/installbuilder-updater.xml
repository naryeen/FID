<project>
	<shortName>OpenForisCollectUpdater</shortName>
	<fullName>Open Foris Collect</fullName>
	<vendor>Open Foris Initiative</vendor>
	<version>VERSION_ID</version>
	<logoImage>images/of-collect-logo-small.png</logoImage>
	<installationLogFile>${installdir}/autoupdate/update.log
	</installationLogFile>
	<componentList>
		<!-- webapps, lib -->
		<component>
			<name>default</name>
			<description>Default Component</description>
			<canBeEdited>1</canBeEdited>
			<selected>1</selected>
			<show>1</show>
			<folderList>
				<folder>
					<name>webapps</name>
					<description>Webapps</description>
					<destination>${webapps_dir}</destination>
					<platforms>all</platforms>
					<distributionFileList>
						<distributionFile>
							<origin>collect.war</origin>
						</distributionFile>
					</distributionFileList>
				</folder>
				<folder>
					<name>lib</name>
					<description>Libs</description>
					<destination>${installdir}/lib</destination>
					<platforms>all</platforms>
					<distributionFileList>
						<distributionFile allowWildcards="1">
							<origin>lib/*.jar</origin>
						</distributionFile>
					</distributionFileList>
				</folder>
			</folderList>

			<postInstallationActionList>
				<!-- create logs folder -->
				<createDirectory path="${installdir}/logs"
					abortOnError="0" />

				<!-- delete old log folder -->
				<deleteFile path="${installdir}/log" abortOnError="0" />
				<deleteFile path="${collect_root_user_dir}/log"
					abortOnError="0" />

				<!-- Delete temporary files -->
				<deleteFile>
					<path>${webapps_dir}/collect</path>
				</deleteFile>

				<!-- Update update.ini file -->
				<writeFile>
					<path>update.ini</path>
					<text>[Update]
url = UPDATE_XML_URL
version_id = VERSION_ID
update_download_location = ${system_temp_directory}
check_for_updates = 1
					</text>
				</writeFile>
				<!-- delete temporary rollaback files -->
				<deleteFile path="${project.rollbackBackupDirectory}" />
			</postInstallationActionList>
		</component>
		<!-- autoupdate -->
		<component>
			<name>autoupdater</name>
			<description>replace autoupdater to perform updates</description>
			<canBeEdited>0</canBeEdited>
			<selected>1</selected>
			<show>0</show>
			<folderList>
				<folder>
					<name>autoupdater</name>
					<destination>${installdir}/autoupdate</destination>
					<platforms>windows linux linux-x64</platforms>
					<distributionFileList>
						<distributionFile
							origin="autoupdate-${platform_name}.${platform_exec_suffix}" />
					</distributionFileList>
				</folder>
				<folder>
					<name>tempfiles</name>
					<destination>${installdir}/temp</destination>
					<platforms>osx</platforms>
					<distributionFileList>
						<distributionFile origin="autoupdate-osx.app.zip" />
					</distributionFileList>
				</folder>
			</folderList>

			<postInstallationActionList>
				<unzip>
					<destinationDirectory>${installdir}/autoupdate
					</destinationDirectory>
					<zipFile>${installdir}/temp/autoupdate-osx.app.zip</zipFile>
					<ruleList>
						<platformTest type="osx" />
					</ruleList>
				</unzip>
				<deleteFile>
					<path>${installdir}/temp/</path>
					<abortOnError>0</abortOnError>
				</deleteFile>
			</postInstallationActionList>
		</component>
	</componentList>
	<preInstallationActionList>
		<setInstallerVariable name="installdir"
			value=".." />
		<setInstallerVariable name="server_http_port"
			value="8380" />
		<setInstallerVariable
			name="collect_root_user_dir"
			value="${user_home_directory}/OpenForis/Collect" />
		<setInstallerVariable name="backup_dir"
			value="${collect_root_user_dir}/backup" />
		<setInstallerVariable name="data_dir"
			value="${collect_root_user_dir}/data" />
		<setInstallerVariable name="webapps_dir"
			value="${installdir}/webapps" />
		<propertiesFileGet>
			<file>${collect_root_user_dir}/collect.properties</file>
			<key>collect.http_port</key>
			<variable>server_http_port</variable>
			<showMessageOnError>0</showMessageOnError>
			<abortOnError>0</abortOnError>
		</propertiesFileGet>
		<throwError>
			<explanation>Open Foris Collect is running</explanation>
			<text>Open Foris Collect is running on port ${server_http_port}
				Shutdown Collect before updating it.</text>
			<ruleList>
				<portTest>
					<condition>cannot_bind</condition>
					<port>${server_http_port}</port>
				</portTest>
			</ruleList>
		</throwError>
	</preInstallationActionList>
	<readyToInstallActionList>
		<!-- delete old backup dir -->
		<deleteFile>
			<path>${backup_dir}</path>
		</deleteFile>
		<createDirectory>
			<path>${backup_dir}</path>
		</createDirectory>
		<!-- Backup data and webapp -->
		<copyFile>
			<origin>${webapps_dir}/collect.war</origin>
			<destination>${backup_dir}/collect.war</destination>
			<abortOnError>0</abortOnError>
			<showMessageOnError>0</showMessageOnError>
		</copyFile>
		<copyFile>
			<origin>${data_dir}/collect.db</origin>
			<destination>${backup_dir}/collect.db</destination>
			<abortOnError>0</abortOnError>
			<showMessageOnError>0</showMessageOnError>
		</copyFile>
		<copyFile>
			<origin>${installdir}/lib/*.jar</origin>
			<destination>${backup_dir}/lib</destination>
			<abortOnError>0</abortOnError>
			<showMessageOnError>0</showMessageOnError>
		</copyFile>
		<copyFile>
			<origin>${collect_root_user_dir}/collect.properties</origin>
			<destination>${backup_dir}</destination>
			<abortOnError>0</abortOnError>
			<showMessageOnError>0</showMessageOnError>
		</copyFile>
		<!-- delete temporary files -->
		<deleteFile>
			<path>${webapps_dir}/collect</path>
			<abortOnError>0</abortOnError>
			<showMessageOnError>0</showMessageOnError>
		</deleteFile>
		<!-- delete old lib files -->
		<deleteFile>
			<path>${installdir}/lib/*.jar</path>
		</deleteFile>
	</readyToInstallActionList>
	<requireInstallationByRootUser>0</requireInstallationByRootUser>
	<requestedExecutionLevel>asInvoker</requestedExecutionLevel>
	<defaultUnixDirectoryPermissions>777</defaultUnixDirectoryPermissions>
	<defaultUnixFilePermissions>777</defaultUnixFilePermissions>
	<enableRollback>1</enableRollback>
	<enableTimestamp>1</enableTimestamp>
	<installationType>upgrade</installationType>
	<overwritePolicy>always</overwritePolicy>
	<createOsxBundleDmg>1</createOsxBundleDmg>
	<osxPlatforms>osx-intel osx-x86_64</osxPlatforms>
</project>