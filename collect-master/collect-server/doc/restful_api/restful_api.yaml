swagger: '2.0'
info:
  title: Collect API
  description: Collect RESTful API
  version: 0.1.0
host: localhost
schemes:
- http
basePath: /collect/
produces:
- application/json
paths:
  /survey/summaries.json:
    get:
      summary: Surveys Summaries
      description: |
        Full list of surveys (only summaries).
      parameters:
      - name: include-temporary
        in: query
        description: Include temporary surveys in the list.
        required: false
        type: boolean
      tags:
      - Survey
      responses:
        200:
          description: An array of survey summary objects
          schema:
            type: array
            items:
              $ref: '#/definitions/SurveySummary'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/{userId}/surveys/summaries.json:
    get:
      summary: Surveys Summaries (only belonging to user institutions)
      description: |
        List of surveys belonging to user institutions.
      parameters:
      - name: userId
        in: path
        description: User ID.
        required: true
        type: integer
      tags:
      - Survey
      responses:
        200:
          description: An array of survey summary objects
          schema:
            type: array
            items:
              $ref: '#/definitions/SurveySummary'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /survey/{id}.json:
    get:
      summary: Complete survey structure
      description: |
        Complete survey with all attribute definitions.
      parameters:
      - name: id
        in: path
        description: survey id
        required: true
        type: number
        format: int32
      - name: include-code-lists
        in: query
        description: Whether or not to include the code list items.
        required: false
        type: boolean
      tags:
      - Survey
      responses:
        200:
          description: The full survey having the specified ID
          schema:
            $ref: '#/definitions/SurveyView'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /survey/simple:
    post:
      summary: Create a new simple project (single attribute survey)
      parameters:
      - name: parameters
        in: body
        description: survey id
        required: true
        schema:
          $ref: '#/definitions/SimpleSurveyCreationParameters'
      tags:
      - Survey
      responses:
        200:
          description: The survey generated using the specified parameters
          schema:
            $ref: '#/definitions/SurveyView'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /survey/{id}/sampling-point-data.json:
    get:
      summary: List of sampling point data associated to the survey with the specified id
      parameters:
      - name: id
        in: path
        description: survey id
        required: true
        type: integer
      - name: parent_keys
        in: query
        description: list of keys to filter the row(s) in the sampling point data. E.g. if the if you specify only the first key will give you the list of sampling point data in the second level; if you specify first and second level keys, the items in the third level will be returned
        required: false
        type: array
        items:
          type: string
      tags:
      - Sampling point data
      responses:
        200:
          description: List of sampling point data associated to the survey with the specified id
          schema:
            $ref: '#/definitions/SamplingDesignItem'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /survey/{surveyId}/data/coordinatevalues.json:
    get:
      summary: Coordinate values associated to a coordinate attribute
      description: List of coordinate values recorded for a survey and associated to the specified coordinate attribute
      parameters:
      - name: surveyId
        in: path
        required: true
        type: integer
        description: survey id
      - name: coordinateAttributeId
        in: query
        required: true
        type: integer
        description: coordinate attribute internal id
      - name: stepNum
        in: query
        required: true
        type: integer
        description: data step number (1=ENTRY, 2=CLEANSING, 3=ANALYSIS)
      tags:
      - Coordinate
      - Data
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CoordinateAttributePoint'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /survey/{surveyId}/data/records/count.json:
    get:
      summary: Survey records count
      parameters:
      - name: surveyId
        in: path
        required: true
        type: integer
        description: survey id
      - name: rootEntityDefinitionId
        in: query
        type: integer
        required: true
        description: internal ID of the root entity definition
      - name: step
        in: query
        type: integer
        required: false
        description: data step number
      tags:
      - Data
      responses:
        200:
          description: OK
          schema:
            type: integer
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /survey/{surveyId}/data/records/{recordId}/content.json:
    get:
      summary: Record content
      parameters:
      - name: surveyId
        in: path
        required: true
        type: integer
        description: survey id
      - name: recordId
        in: path
        type: integer
        required: true
        description: internal ID of the record
      - name: step
        in: query
        type: integer
        required: false
        description: data step number
      tags:
      - Data
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Record'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /survey/{surveyId}/data/records/random.json:
    post:
      summary: Create a new record and assign it an id based on the sampling point data
      parameters:
      - name: surveyId
        in: path
        required: true
        type: integer
        description: survey id
      - name: userId
        in: query
        description: User ID
        required: true
        type: integer
      tags:
      - Data
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Record'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /command/record/attribute:
    post:
      summary: Submit an AddAttributeCommand
      parameters:
      - name: command
        in: body
        required: true
        schema:
          $ref: '#/definitions/AddAttributeCommand'
      tags:
      - Data
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordEvent'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Submit an UpdateAttributeCommand
      parameters:
      - name: command
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateAttributeCommandWrapper'
      tags:
      - Data
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordEvent'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /command/record/node:
    delete:
      summary: Submit a DeleteNodeCommand
      parameters:
      - name: command
        in: body
        required: true
        schema:
          $ref: '#/definitions/DeleteNodeCommand'
      tags:
      - Data
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordEvent'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  SurveySummary:
    type: object
    description: please refer to org.openforis.collect.model.SurveySummary Java class
    properties:
      id:
        type: number
        description: Unique identifier.
      name:
        type: string
        description: Human readable identifier.
      uri:
        type: string
        description: Global identifier.
      projectName:
        type: string
        description: Name of the project for which the survey has been created.
  EntityDefView:
    type: object
    description: please refer to org.openforis.collect.metamodel.EntityDefView Java class
    properties:
      internalId:
        type: integer
        description: internal ID
  SamplingDesignItem:
    type: object
    description: please refer to org.openforis.collect.model.SamplingDesignItem Java class
    properties:
      id:
        type: integer
        description: internal ID
      surveyId:
        type: integer
        description: survey internal ID
      x:
        type: number
      y:
        type: number
      srsId:
        type: string
  CodeListView:
    type: object
    description: please refer to org.openforis.collect.metamodel.CodeListView Java class
    properties:
      id:
        type: integer
        description: internal ID
      name:
        type: string
        description: internal human readable identifier
      items:
        type: array
        description: please refer to org.openforis.collect.metamodel.CodeListItemView Java class
        items:
          $ref: '#/definitions/CodeListItemView'
  CodeListItemView:
    type: object
    description: please refer to org.openforis.collect.metamodel.CodeListItemiew Java class
    properties:
      id:
        type: integer
        description: internal ID
      code:
        type: string
        description: value that will be stored in the data
      label:
        type: string
        description: Label shown to the data entry user
      color:
        type: string
        description: color of the item
  SurveyView:
    type: object
    description: please refer to org.openforis.collect.metamodel.SurveyView Java class
    properties:
      id:
        type: integer
        description: Unique identifier
      rootEntities:
        type: array
        items:
          $ref: '#/definitions/EntityDefView'
        description: ''
      codeLists:
        type: array
        items:
          $ref: '#/definitions/CodeListView'
        description: ''
  SimpleSurveyCreationParameters:
    type: object
    description: please refer to org.openforis.collect.metamodel.SimpleSurveyCreationParameters Java class
    properties:
      name:
        type: string
        description: survey name
      description:
        type: string
        description: survey description
      values:
        type: array
        description: single code attribute list of values
        items:
          type: object
          description: please refer to org.openforis.collect.metamodel.SimpleSurveyCreationParameters.ListItem Java class
          properties:
            code:
              type: string
              description: value that will be stored in the data
            label:
              type: string
              description: Label shown to the data entry user
            color:
              type: string
              description: color of the item
      samplingPointGenerationSettings:
        type: object
        description: please refer to org.openforis.collect.metamodel.samplingdesign.SamplingPointGenerationSettings Java class
        properties:
          aoiBoundary:
            type: array
            description: List of coordinate boundaries for the AOI
            items:
              $ref: '#/definitions/Coordinate'
          levelsSettings:
            type: array
            items:
              $ref: '#/definitions/SamplingPointLevelGenerationSettings'
            description: Settings for the geneation of sampling points for every level (from root to nested levels)
  Coordinate:
    type: object
    properties:
      x:
        type: number
      y:
        type: number
      srsId:
        type: string
  CoordinateAttributePoint:
    type: object
    properties:
      recordId:
        type: integer
      lat:
        type: number
      lon:
        type: number
      recordKeys:
        type: array
        items:
          type: string
  SamplingPointLevelGenerationSettings:
    type: object
    description: please refer to org.openforis.collect.metamodel.samplingdesign.SamplingPointLevelGenerationSettings Java class
    properties:
      numPoints:
        type: integer
        description: Total number of points to be generated
      shape:
        type: string
        description: Shape of the generated sampling points (CIRCLE or SQUARE)
      distribution:
        type: string
        description: Distribution of the generated sampling points (RANDOM or GRIDDED)
      resolution:
        type: number
        description: Resolution of the points (in meters)
      pointWidth:
        type: string
        description: Width of every generated point
  Record:
    type: object
    description: please refer to org.openforis.collect.model.proxy.RecordProxy Java class
    properties:
      id:
        type: integer
      rootEntity:
        $ref: '#/definitions/Entity'
  Node:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  Entity:
    type: object
    description: please refer to org.openforis.collect.model.proxy.EntityProxy Java class
    allOf:
      - $ref: '#/definitions/Node'
      - properties:
          children:
            type: array
            items:
              $ref: '#/definitions/Node'
  Attribute:
    type: object
    description: please refer to org.openforis.collect.model.proxy.AttributeProxy Java class
    allOf:
      - $ref: '#/definitions/Node'
      - properties:
          value:
            type: object
  NodeCommand:
    type: object
    properties:
      username:
        type: string
      surveyId:
        type: integer
      recordId:
        type: integer
      parentEntityId:
        type: integer
      nodeDefId:
        type: integer
      nodeId:
        type: integer
  AddAttributeCommand:
    type: object
    allOf:
      - $ref: '#/definitions/NodeCommand'
      - properties:
          index:
            type: integer
  UpdateAttributeCommandWrapper:
    type: object
    allOf:
      - $ref: '#/definitions/NodeCommand'
      - properties:
          attributeType:
            type: string
          value:
            type: object
            description: the content depends on the type of attribute; it will be a field by field map of the value
  DeleteNodeCommand:
    type: object
    allOf:
      - $ref: '#/definitions/NodeCommand'
  RecordEvent:
    type: object
    properties:
      surveyName:
        type: string
      recordId:
        type: integer
      recordStep:
        type: string
      definitionId:
        type: integer
      ancestorIds:
        type: array
        items:
          type: integer
      nodeId:
        type: integer
      timestamp:
        type: string
      userName:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string